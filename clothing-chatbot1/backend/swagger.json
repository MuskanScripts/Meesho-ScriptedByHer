{
  "openapi": "3.0.0",
  "info": {
    "title": "Clothing Chatbot API",
    "description": "API for clothing recommendations and product search",
    "version": "1.0.0",
    "contact": {
      "email": "support@clothingchatbot.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:5000",
      "description": "Development server"
    }
  ],
  "tags": [
    {
      "name": "recommend",
      "description": "Chatbot recommendation endpoints"
    },
    {
      "name": "products",
      "description": "Product search and retrieval endpoints"
    }
  ],
  "paths": {
    "/api/recommend": {
      "post": {
        "tags": ["recommend"],
        "summary": "Get product recommendations from chatbot",
        "description": "Processes user message and returns product recommendations or conversational reply",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "I need a blue shirt"
                  }
                },
                "required": ["message"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "text": {
                          "type": "string",
                          "example": "I can help you find a blue shirt. What style are you looking for?"
                        }
                      }
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Product"
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/products/search": {
      "post": {
        "tags": ["products"],
        "summary": "Search for products",
        "description": "Search for products based on various criteria",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of items per page"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "shirt"
                  },
                  "color": {
                    "type": "string",
                    "example": "blue"
                  },
                  "gender": {
                    "type": "string",
                    "example": "men"
                  },
                  "usage": {
                    "type": "string",
                    "example": "casual"
                  },
                  "season": {
                    "type": "string",
                    "example": "summer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "products": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Product"
                      }
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/Pagination"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/products/{id}": {
      "get": {
        "tags": ["products"],
        "summary": "Get product by ID",
        "description": "Returns a single product by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Product ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/products/distinct/{field}": {
      "get": {
        "tags": ["products"],
        "summary": "Get distinct values for a field",
        "description": "Returns all distinct values for a specified field",
        "parameters": [
          {
            "in": "path",
            "name": "field",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["articleType", "baseColour", "gender", "usage", "season", "masterCategory", "subCategory"]
            },
            "description": "Field name"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid field",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health check endpoint",
        "description": "Returns the health status of the API",
        "responses": {
          "200": {
            "description": "API is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "environment": {
                      "type": "string",
                      "example": "development"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 15970
          },
          "gender": {
            "type": "string",
            "example": "men"
          },
          "masterCategory": {
            "type": "string",
            "example": "apparel"
          },
          "subCategory": {
            "type": "string",
            "example": "topwear"
          },
          "articleType": {
            "type": "string",
            "example": "Shirts"
          },
          "baseColour": {
            "type": "string",
            "example": "Navy Blue"
          },
          "season": {
            "type": "string",
            "example": "summer"
          },
          "usage": {
            "type": "string",
            "example": "casual"
          },
          "productDisplayName": {
            "type": "string",
            "example": "Turtle Check Men Navy Blue Shirt"
          },
          "link": {
            "type": "string",
            "example": "http://example.com/product/15970"
          }
        }
      },
      "Pagination": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "example": 100
          },
          "page": {
            "type": "integer",
            "example": 1
          },
          "limit": {
            "type": "integer",
            "example": 10
          },
          "pages": {
            "type": "integer",
            "example": 10
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "Invalid input"
          },
          "message": {
            "type": "string",
            "example": "Invalid search field: invalid_field"
          }
        }
      }
    }
  }
}